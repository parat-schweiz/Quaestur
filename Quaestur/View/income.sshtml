@Master['View/master.sshtml']

@Section['script']
<script>
  const formatter = new Intl.NumberFormat('de-CH', {
    style: 'currency',
    currency: '@Model.Currency',
    minimumFractionDigits: 2
  })
  function isAmount(stringAmount){
    return /^(@Model.Currency)?\s*?[0-9'’]*[0-9].?[0-9]*$/.test(stringAmount);
  }
  function parseAmount(stringAmount){
    stringAmount = stringAmount
      .replace("@Model.Currency", "")
      .replace(" ", "")
      .replace("'", "")
      .replace("’", "");
    return parseFloat(stringAmount);
  }
  function updateTaxableIncome(){
    var netIncomeString = $("#incomeNetIncome").val();
    var deductionString = $("#incomeDeduction").val();
    if (isAmount(netIncomeString) &&
        isAmount(deductionString)) {
      var netIncome = parseAmount(netIncomeString);
      var deduction = parseAmount(deductionString);
      $("#incomeTaxedIncome").val(formatter.format(netIncome - deduction));
      updateFullTax();
    }
  }
  function updateFullTax(){
    var taxedIncomeString = $("#incomeTaxedIncome").val();
    if (isAmount(taxedIncomeString)) {
      var taxedIncome = parseAmount(taxedIncomeString);
      $.post("/income/computefulltax", taxedIncome.toFixed(2), function(resultData, status){
        if (isAmount(resultData)){
          $("#incomeFullTax").val(formatter.format(resultData));
          updateMembershipFee();
        }
      }); 
    }
  }
  function updateMembershipFee(){
    var fullTaxString = $("#incomeFullTax").val();
    if (isAmount(fullTaxString)) {
      $("#incomeFullTax").removeClass('is-invalid');
      $("#feedbackIncomeFullTax").removeClass('invalid-feedback');
      $("#feedbackIncomeFullTax").html("");
      var fullTax = parseAmount(fullTaxString);
      $.post("/income/membershipfee", fullTax.toFixed(2), function(resultData, status){
        if (resultData){
          $("#membershipfee").html(resultData);
        }
      }); 
    }
  }
  function formatCurrency(id){
    var valueString = $(id).val();
    if (isAmount(valueString)) {
      var value = parseAmount(valueString);
      $(id).val(formatter.format(value));
    }
  }
  var react = true;
  $(document).ready(function(){
    $("#incomeNetIncome").change(function() {
      if (react) {
        react = false;
        formatCurrency("#incomeNetIncome");
        updateTaxableIncome();
        react = true;
      }
    });
    $("#incomeDeduction").change(function() {
      if (react) {
        react = false;
        formatCurrency("#incomeDeduction");
        updateTaxableIncome();
        react = true;
      }
    });
    $("#incomeTaxedIncome").change(function() {
      if (react) {
        react = false;
        formatCurrency("#incomeTaxedIncome");
        $("#incomeDeduction").val("");
        $("#incomeNetIncome").val("");
        updateFullTax();
        react = true;
      }
    });
    $("#incomeFullTax").change(function() {
      if (react) {
        react = false;
        formatCurrency("#incomeFullTax");
        $("#incomeDeduction").val("");
        $("#incomeNetIncome").val("");
        $("#incomeTaxedIncome").val("");
        updateMembershipFee();
        react = true;
      }
    });
    $("#incomeCancelButton").click(function(event) {
      window.location.href = "/";
      event.preventDefault();  
    });
    $("#incomeSaveButton").click(function(event) {
      var fullTaxString = $("#incomeFullTax").val();
      if (isAmount(fullTaxString)) {
        var fullTax = parseAmount(fullTaxString);
        $.post("/income/@Current.Id/updatefulltax", fullTax.toFixed(2), function(resultData, status){
          if (resultData){
            window.location.href = "/";
          }
        });
      } else {
        $("#incomeFullTax").addClass('is-invalid');
        $("#feedbackIncomeFullTax").addClass('invalid-feedback');
        $("#feedbackIncomeFullTax").html("@Model.InvalidText");
      }
      event.preventDefault();  
    });
    formatCurrency("#incomeFullTax");
    updateMembershipFee();
  });
</script>
@EndSection

@Section['data']
<div class="container">
  <form>
    <div class="form-row">
      <div class="col-md-12 mb-3 align-self-center">
        <span>@Model.Info1</span>
      </div>
    </div>
    <div class="form-row">
      <div class="col-md-12 mb-3 align-self-center">
        <span>@Model.Info2</span>
      </div>
    </div>
    <div class="form-row">
      <div class="col-md-12 mb-3 align-self-center">
        <span>@Model.Info3</span>
      </div>
    </div>
    <div class="form-row">
      <div class="col-md-12 mb-3 align-self-center">
        <span>@Model.Info4</span>
      </div>
    </div>
    <div class="form-row row-lightblue-background">
      <div class="col-md-4 mb-3">
        <label for="incomeNetIncome">@Model.PhraseFieldNetIncome</label>
        <input type="text" class="form-control" id="incomeNetIncome" value="">
      </div>
      <div class="col-md-8 mb-3 align-self-center">
        <span class="align-middle">@Model.PhraseInfoNetIncome</span>
      </div>
    </div>
    <div class="form-row row-lightblue-background">
      <div class="col-md-4 mb-3">
        <label for="incomeDeduction">@Model.PhraseFieldDeduction</label>
        <input type="text" class="form-control" id="incomeDeduction" value="">
      </div>
      <div class="col-md-8 mb-3 align-self-center">
        <span class="align-middle">@Model.PhraseInfoDeduction</span>
      </div>
    </div>
    <div class="form-row row-lightblue-background">
      <div class="col-md-4 mb-3 align-self-center">
        <label for="incomeTaxedIncome">@Model.PhraseFieldTaxedIncome</label>
        <input type="text" class="form-control" id="incomeTaxedIncome" value="">
      </div>
      <div class="col-md-8 mb-3 align-self-center">
        <span class="align-middle">@Model.PhraseInfoTaxedIncome</span>
      </div>
    </div>
    <div class="form-row row-lightgreen-background">
      <div class="col-md-4 mb-3">
        <label for="incomeFullTax">@Model.PhraseFieldFullTax</label>
        <input type="text" class="form-control" id="incomeFullTax" value="@Model.FullTax">
        <div id="feedbackIncomeFullTax" class="valid-feedback"></div>
      </div>
      <div class="col-md-8 mb-3 align-self-center">
        <span class="align-middle">@Model.PhraseInfoFullTax</span>
      </div>
    </div>
    <div id="membershipfee">
    </div>
    <button id="incomeCancelButton" class="btn btn-primary mb-2">@Model.PhraseButtonCancel</button>
    <button id="incomeSaveButton" class="btn btn-primary mb-2">@Model.PhraseButtonSave</button>
  </form>
</div>
@EndSection