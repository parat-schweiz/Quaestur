@Master['View/dialog.sshtml']

@Section['body']
<script>
function assignFieldMultiValidation(field, key, result){
  var fieldId = '#systemWideFile' + field + key;
  var feedbackId = '#systemWideFile' + field + "Feedback" + key;
  var validation = result[field + 'Validation'];
  if (validation){
    $(fieldId).addClass('is-invalid');
    $(feedbackId).addClass('invalid-feedback');
    $(feedbackId).removeClass('valid-feedback');
    $(feedbackId).html(validation);
  }else{
    $(fieldId).addClass('is-invalid');
    $(feedbackId).removeClass('invalid-feedback');
    $(feedbackId).addClass('valid-feedback');
    $(feedbackId).html('');
  }
}
function assignFieldValidation(field, result){
  var fieldId = '#systemWideFile' + field;
  var validation = result[field + 'Validation'];
  if (validation){
    if ($(fieldId)[0].tagName == 'SELECT'){
      $(fieldId).parent().addClass('is-invalid');
    }else{
      $(fieldId).addClass('is-invalid');
    }
    $(fieldId + "Feedback").addClass('invalid-feedback');
    $(fieldId + "Feedback").removeClass('valid-feedback');
    $(fieldId + "Feedback").html(validation);
  }else{
    if ($(fieldId)[0].tagName == 'SELECT'){
      $(fieldId).parent().removeClass('is-invalid');
    }else{
      $(fieldId).removeClass('is-invalid');
    }
    $(fieldId + "Feedback").removeClass('invalid-feedback');
    $(fieldId + "Feedback").addClass('valid-feedback');
    $(fieldId + "Feedback").html('');
  }
}
function assignValidation(resultData){
  var result = JSON.parse(resultData);
  assignFieldValidation("Type", result);
  assignFieldValidation("File", result);
  if (result.MessageType) $.notify({ message: result.MessageText },{ type: result.MessageType, element: "form" });
  return result.IsSuccess;
}
function readFile(callback){
  var input = $('#systemWideFileFile')[0];
  var file = input.files[0];
  if (file){
    var reader = new FileReader();
    reader.onload = function(e) {
      callback(file.name, file.size, reader.result);
    }
    reader.readAsDataURL(file);
  }else{
    callback("", 0, null);
  }
}
$("#@Model.ButtonId").click(function() {
  var formData = new Object();
  formData.Type = $("#systemWideFileType").val();
  readFile(function(name, size, data){
    formData.FileName = name;
    formData.FileSize = size;
    formData.FileData = data;
    $.post("/systemwidefile/@Model.Method/@Model.Id", JSON.stringify(formData), function(resultData, status){
      if (assignValidation(resultData)) {
        $('#@Model.DialogId').modal('hide');
        updateSystemWideFileList();
        $('.modal-backdrop').remove();
      }
    });
  });
});
$('.datepicker').datepicker({
    format: 'dd.mm.yyyy',
    startDate: '-3650d',
    language: 'de'
});
$('.selectpicker').selectpicker();
</script>
<div class="container">
  <form>
    <div class="form-row">
      <div class="col-12 mb-3">
        <label for="systemWideFileType">@Model.PhraseFieldType</label>
        <select id="systemWideFileType" class="selectpicker form-control" data-live-search="true">
          @Each.Types
          <option value="@Current.Value" @Current.Options>@Current.Name</option>
          @EndEach
        </select>
        <div id="systemWideFileTypeFeedback" class="valid-feedback"></div>
      </div>
    </div>
    <div class="form-row">
      <div class="col-12 mb-3">
        <label for="systemWideFileFile">@Model.PhraseFieldFile</label>
        <input type="file" id="systemWideFileFile" class="form-control-file"/>
        <div id="systemWideFileFileFeedback" class="valid-feedback"></div>
        <a href="@Model.FilePath">@Model.FileName</a> @Model.FileSize
      </div>
    </div>
  </form>
</div>
@EndSection